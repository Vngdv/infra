variant: fcos
version: 1.5.0
systemd:
  units:
    - name: "rpm-ostree-install-k3s-dependencies.service"
      enabled: true
      contents: |
        [Unit]
        Description=Install system packages
        Wants=network-online.target
        After=network-online.target
        # We run before `zincati.service` to avoid conflicting rpm-ostree
        # transactions.
        Before=zincati.service

        ConditionPathExists=|!/usr/bin/kubectl
        ConditionPathExists=|!/usr/bin/helm
        ConditionPathExists=|!/usr/share/selinux/packages/k3s.pp

        [Install]
        WantedBy=multi-user.target     

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        Restart=on-failure
        RestartSec=15
        StartLimitIntervalSec=120
        StartLimitBurst=5
        ExecStart=/usr/bin/rpm-ostree install --apply-live --allow-inactive --assumeyes --idempotent  \
          kubectl \
          helm \
          https://github.com/k3s-io/k3s-selinux/releases/download/v1.6.latest.1/k3s-selinux-1.6-1.coreos.noarch.rpm
        ExecStart=/bin/touch /var/lib/%N.stamp
        ExecStart=/bin/systemctl --no-block reboot


    - name: "k3s.service"
      enabled: true
      # Reference: K3s systemd service file https://get.k3s.io/
      contents: |
        [Unit]
        Description=Lightweight Kubernetes
        Documentation=https://k3s.io
        Wants=network-online.target
        After=network-online.target

        [Install]
        WantedBy=multi-user.target

        [Service]
        Type=notify
        EnvironmentFile=-/etc/default/%N
        EnvironmentFile=-/etc/sysconfig/%N
        EnvironmentFile=-/etc/systemd/system/%N.env
        KillMode=process
        Delegate=yes
        User=root
        # Having non-zero Limit*s causes performance problems due to accounting overhead
        # in the kernel. We recommend using cgroups to do container-local accounting.
        LimitNOFILE=1048576
        LimitNPROC=infinity
        LimitCORE=infinity
        TasksMax=infinity
        TimeoutStartSec=0
        Restart=always
        RestartSec=5s
        ExecStartPre=/bin/sh -xc '! /usr/bin/systemctl is-enabled --quiet nm-cloud-setup.service 2>/dev/null'
        ExecStartPre=-/sbin/modprobe br_netfilter
        ExecStartPre=-/sbin/modprobe overlay
        # If agents are needed design this in a more dynamic way
        ExecStart=/usr/local/bin/k3s server \
          --node-external-ip $(hostname -I | awk '{print $1}') 
        

storage:
  files:
    # Package registries
    - path: /etc/yum.repos.d/kubernetes.repo
      contents:
        inline: |
          [kubernetes]
          name=Kubernetes
          baseurl=https://pkgs.k8s.io/core:/stable:/v1.33/rpm/
          enabled=1
          gpgcheck=1
          gpgkey=https://pkgs.k8s.io/core:/stable:/v1.33/rpm/repodata/repomd.xml.key
    # Install K3s binary
    - path: /usr/local/bin/k3s
      overwrite: true
      mode: 0755
      contents:
        source: "https://github.com/k3s-io/k3s/releases/download/v1.33.0%2Bk3s1/k3s"
        # TODO include checksum
    - path: /etc/rancher/k3s/config.yaml
      overwrite: true
      mode: 0750
      contents:
        inline: |
          node-label:
            # Cilium needs this label to be set on fresh clusters
            # Otherweise we need to kill the pods manually
            - "node.cilium.io/agent-not-ready=true"
          token: "${cluster_token}"
          disable:
            - servicelb
            - traefik
          disable-kube-proxy: true
          disable-network-policy: true
          secrets-encryption: true
          flannel-backend: none

          node-ip: ${node_ip}
          # Will be set by the K3s service
          # node-external-ip: 

          # Configuration first Master node
          %{ if node_index == 0 }
          cluster-init: true
          tls-san:
            - "${api_server_ip}"
          %{ endif }

          # Configuration other Master nodes
          %{ if node_index != 0 }
          server: "https://${api_server_ip}:${api_server_port}"
          %{ endif }

          